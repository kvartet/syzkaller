include <lib_str.h>

Str_Len(pstr ptr[in, CPU_CHAR]) CPU_SIZE_T
Str_Len_N(pstr ptr[in, CPU_CHAR], len_max CPU_SIZE_T) CPU_SIZE_T
Str_Copy(pstr_dest ptr[out, CPU_CHAR], pstr_src ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
Str_Copy_N(pstr_dest ptr[out, CPU_CHAR], pstr_src ptr[in, CPU_CHAR], len_max CPU_SIZE_T) ptr[in, CPU_CHAR]
Str_Cat(pstr_dest ptr[in, CPU_CHAR], pstr_cat ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
Str_Cat_N(pstr_dest ptr[in, CPU_CHAR], pstr_cat ptr[in, CPU_CHAR], len_max CPU_SIZE_T) ptr[in, CPU_CHAR]
Str_Cmp(p1_str ptr[in, CPU_CHAR], p2_str ptr[in, CPU_CHAR]) CPU_INT16S
Str_Cmp_N(p1_str ptr[in, CPU_CHAR], p2_str ptr[in, CPU_CHAR], len_max CPU_SIZE_T) CPU_INT16S
Str_CmpIgnoreCase(p1_str ptr[in, CPU_CHAR], p2_str ptr[in, CPU_CHAR]) CPU_INT16S
Str_CmpIgnoreCase_N(p1_str ptr[in, CPU_CHAR], p2_str ptr[in, CPU_CHAR], len_max CPU_SIZE_T) CPU_INT16S
Str_Char(pstr ptr[in, CPU_CHAR], srch_char CPU_CHAR) ptr[in, CPU_CHAR]
Str_Char_N(pstr ptr[in, CPU_CHAR], len_max CPU_SIZE_T, srch_char CPU_CHAR) ptr[in, CPU_CHAR]
Str_Char_Last(pstr ptr[in, CPU_CHAR], srch_char CPU_CHAR) ptr[in, CPU_CHAR]
Str_Char_Last_N(pstr ptr[in, CPU_CHAR], len_max CPU_SIZE_T, srch_char CPU_CHAR) ptr[in, CPU_CHAR]
Str_Char_Replace(pstr ptr[in, CPU_CHAR], char_srch CPU_CHAR, char_replace CPU_CHAR) ptr[in, CPU_CHAR]
Str_Char_Replace_N(pstr ptr[in, CPU_CHAR], char_srch CPU_CHAR, char_replace CPU_CHAR, len_max CPU_SIZE_T) ptr[in, CPU_CHAR]
Str_Str(pstr ptr[in, CPU_CHAR], pstr_srch ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
Str_Str_N(pstr ptr[in, CPU_CHAR], pstr_srch ptr[in, CPU_CHAR], len_max CPU_SIZE_T) ptr[in, CPU_CHAR]
Str_FmtNbr_Int32U(nbr CPU_INT32U, nbr_dig CPU_INT08U, nbr_base CPU_INT08U, lead_char CPU_CHAR, lower_case CPU_BOOLEAN, nul CPU_BOOLEAN, pstr ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
Str_FmtNbr_Int32S(nbr CPU_INT32S, nbr_dig CPU_INT08U, nbr_base CPU_INT08U, lead_char CPU_CHAR, lower_case CPU_BOOLEAN, nul CPU_BOOLEAN, pstr ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
# Str_FmtNbr_32(nbr CPU_FP32, nbr_dig CPU_INT08U, nbr_dp CPU_INT08U, lead_char CPU_CHAR, nul CPU_BOOLEAN, pstr ptr[in, CPU_CHAR]) ptr[in, CPU_CHAR]
Str_ParseNbr_Int32U(pstr ptr[in, CPU_CHAR], pstr_next ptr[in, ptr[in, CPU_CHAR]], nbr_base CPU_INT08U) CPU_INT32U
Str_ParseNbr_Int32S(pstr ptr[in, CPU_CHAR], pstr_next ptr[in, ptr[in, CPU_CHAR]], nbr_base CPU_INT08U) CPU_INT32S


type CPU_INT08U         int8
type CPU_INT16S         int16
type CPU_INT32S         int32
type CPU_INT32U         int32